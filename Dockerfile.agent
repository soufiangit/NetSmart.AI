# Multi-stage Dockerfile for SKMA-FON Agent
FROM ubuntu:22.04 as kernel-builder

# Install kernel build dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    linux-headers-generic \
    kmod \
    && rm -rf /var/lib/apt/lists/*

# Copy kernel module source
COPY kernel/ /usr/src/skma-fon/
WORKDIR /usr/src/skma-fon

# Build kernel module
RUN make clean && make

# Runtime stage
FROM python:3.12-slim

# Install runtime dependencies
RUN apt-get update && apt-get install -y \
    kmod \
    procps \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Create app directory
WORKDIR /app

# Copy Python requirements and install
COPY agent/requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

# Copy application files
COPY agent/src/ ./src/
COPY ai/src/ ./ai/
COPY --from=kernel-builder /usr/src/skma-fon/monitoring_module.ko ./kernel/
COPY --from=kernel-builder /usr/src/skma-fon/load_module.sh ./kernel/

# Make scripts executable
RUN chmod +x kernel/load_module.sh

# Create directory for AI models
RUN mkdir -p models

# Set environment variables
ENV PYTHONPATH=/app
ENV CLOUD_API_URL=http://localhost:5000
ENV AGENT_NAME=skma-fon-agent
ENV LOG_LEVEL=INFO

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:8080/health || exit 1

# Expose agent HTTP endpoint
EXPOSE 8080

# Entry point script
COPY docker-entrypoint.sh /entrypoint.sh
RUN chmod +x /entrypoint.sh

ENTRYPOINT ["/entrypoint.sh"]
CMD ["python", "src/agent.py"]