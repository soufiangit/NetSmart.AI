# Dockerfile for SKMA-FON Cloud API
FROM python:3.10-slim

# Configure apt to be more resilient to temporary failures
RUN echo 'APT::Acquire::Retries "5";' > /etc/apt/apt.conf.d/80retries \
    && echo 'Acquire::https::Verify-Peer "false";' > /etc/apt/apt.conf.d/99verify-peer.conf \
    && echo 'Acquire::Check-Valid-Until "false";' > /etc/apt/apt.conf.d/99no-check-valid \
    && echo 'APT::Get::AllowUnauthenticated "true";' > /etc/apt/apt.conf.d/99allow-unauth.conf \
    && echo 'Acquire::BrokenProxy "true";' > /etc/apt/apt.conf.d/99broken-proxy.conf \
    && echo 'Acquire::http::Pipeline-Depth "0";' > /etc/apt/apt.conf.d/99no-pipeline.conf \
    && echo 'Acquire::http::No-Cache "true";' > /etc/apt/apt.conf.d/99no-cache.conf

# Try to use a more reliable Debian mirror if sources.list exists
RUN if [ -f /etc/apt/sources.list ]; then \
        sed -i 's|http://deb.debian.org/debian|http://ftp.us.debian.org/debian|g' /etc/apt/sources.list; \
    fi

# Install system dependencies and build tools needed for scikit-learn
RUN apt-get clean && rm -rf /var/lib/apt/lists/* && \
    apt-get update -o Acquire::CompressionTypes::Order::=gz && \
    for i in 1 2 3 4 5; do \
        apt-get install -y --allow-unauthenticated --no-install-recommends --fix-missing \
        curl \
        build-essential \
        gcc && break || \
        if [ $i -lt 5 ]; then \
            sleep 15 && apt-get clean && rm -rf /var/lib/apt/lists/* && apt-get update -o Acquire::CompressionTypes::Order::=gz; \
        else \
            exit 1; \
        fi; \
    done && \
    rm -rf /var/lib/apt/lists/*

# Create app directory
WORKDIR /app

# Copy requirements and install Python dependencies
COPY cloud/api/requirements.txt .
# Install setuptools and wheel first to avoid build issues
RUN pip install --no-cache-dir setuptools wheel
RUN pip install --no-cache-dir -r requirements.txt

# Copy application files
COPY cloud/api/ .

# Create data directory for SQLite database
RUN mkdir -p data

# Set environment variables
ENV FLASK_APP=app.py
ENV FLASK_ENV=production
ENV DATABASE_PATH=/app/data/skma_fon.db

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
    CMD curl -f http://localhost:5000/api/health || exit 1

# Expose API port
EXPOSE 5000

# Run the application
CMD ["python", "app.py"]